CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM BIT_DB.Spotifydata;

--What is the average danceability by artist and track?
SELECT avg(danceability),artist_name, track_name 
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;



--Who are the top 10 artists based on popularity?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10; 

--What artist released the longest song?
SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

--What's the average danceability for the 10 most popular songs? 
SELECT avg(danceability), popularity, track_name 
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10;

--How many artists had more than 2 songs in the top 50 songs?
SELECT artist_name, count(artist_name) artist_count 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING artist_count > 2;

--Calculate the average popularity for the artists in the Spotify data table. 
--Then, for every artist with an average popularity of 90 or above, show their name, 
--their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90
ORDER BY average_popularity DESC;










